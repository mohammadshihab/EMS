#include "ThingSpeak.h"
#include <HardwareSerial.h> //For serial communication
HardwareSerial SerialPort(2); // For using UART2 



int data1 = 0;                            // Will be sent from the webpage
int data2 = 10;

void setup() {
  pinMode(14,OUTPUT); //wi-fi connectivity indicator
  Serial.begin(9600);
  Serial2.begin(9600, SERIAL_8N1, 16, 17);  // connected with stm32
  
  delay(100);
  // We start by connecting to a Wi-Fi network
  Serial.println();
  Serial.println();
  
}

 int data1Prev = 0;  // Flag to track if data1 has been received
 char data1Str[8];   // need for data1


// data1 is the recharge amount sent from website which will be sent to stm32



  // data2 will be the remaining balance which will be shown in website



 // this is for sorting the received serial data from stm32
 void Data2withSorting(){
    char receivedData[6]; // Temporary value for serial.2 receiving data
    
    if (Serial2.available() >= 6) { // Check if there are at least 6 bytes available on UART2
    Serial2.readBytes(receivedData,7); // If the 6 bytes are available it will try to receive 8 bytes, hence digit will move from left to right and change their position
    //Serial.println(receivedData);
    receivedData[6] = '\0'; // Setting the null terminator at last position

   //From here to till last is for sorting received data where the 's' should be the last char
   char str[100]={'0'};
   strcpy(str,receivedData);
   int len = strlen(str);
   int sp;
   char str2[100]={'0'};
   for(int i=0; i<=len-1; i++){
       if(str[i]=='s'){
           sp=i;
           break;
       }
   }
   for(int i=len-1; i>=0; i--){
       str2[i]=str[sp];
       sp--;
       if(sp==-1){
           sp=len-1;
       }
   }
   char recDataSorted[6]={'0'};
   strcpy(recDataSorted,str2);
   
   data2 = atoi(recDataSorted); // Convert string to integer
   Serial.println(data2); 
   Serial.println(receivedData);
  }
  
  }
 

void loop() {
  Data2withSorting();
  delay(1000);
}



